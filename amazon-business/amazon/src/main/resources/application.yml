spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    properties:
      hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect

stripe:
  secretKey: ${STRIPE_SECRET_KEY}
  primaryKey: ${STRIPE_PRIMARY_KEY}
  webhookSecret: ${STRIPE_WEBHOOK_SECRET_KEY}
  
client:
  end-point: ${FRONT_END_SOURCE}


#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: YOUR_CLIENT_ID
#            client-secret: YOUR_CLIENT_SECRET
#            scope: profile, email
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#        provider:
#          google:
#            authorization-uri: https://accounts.google.com/o/oauth2/auth
#            token-uri: https://oauth2.googleapis.com/token
#            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
#            user-name-attribute: sub



